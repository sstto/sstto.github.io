<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-03-15T13:56:47+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">여행을 떠나자</title><subtitle>잠시나마 일상에서 벗어나 생각을 표현하고 유용한 지식을 알리고 싶어 만든 공간입니다.</subtitle><author><name>Youngin Sim</name></author><entry><title type="html">Operating System - proj0 : Add SystemCall</title><link href="http://localhost:4000/os/proj0/" rel="alternate" type="text/html" title="Operating System - proj0 : Add SystemCall" /><published>2022-03-15T00:00:00+09:00</published><updated>2022-03-15T00:00:00+09:00</updated><id>http://localhost:4000/os/proj0</id><content type="html" xml:base="http://localhost:4000/os/proj0/"><![CDATA[<p class="notice--success">💡 ** OS proj0 시스템 호출 추가하기**<br /></p>

<h1 id="archarm64includeasmunistdh">arch/arm64/include/asm/unistd.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define __ARM_NR_compat_set_tls		(__ARM_NR_COMPAT_BASE + 5)
#define __ARM_NR_COMPAT_END		(__ARM_NR_COMPAT_BASE + 0x800)
</span>
<span class="cm">/* 47 번째 줄 변경 */</span>
<span class="cp">#define __NR_compat_syscalls		400
#endif
</span>
<span class="cp">#define __ARCH_WANT_SYS_CLONE
</span></code></pre></div></div>

<h1 id="archarm64includeasmunistd32h">arch/arm64/include/asm/unistd32.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_statx</span><span class="p">,</span> <span class="n">sys_statx</span><span class="p">)</span>
<span class="cp">#define __NR_rseq 398
</span><span class="cm">/* 822 번째 줄 추가 */</span>
<span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_rseq</span><span class="p">,</span> <span class="n">sys_rseq</span><span class="p">)</span>
<span class="cp">#define __NR_hello 399
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_hello</span><span class="p">,</span> <span class="n">sys_hello</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="includelinuxsyscallsh">include/linux/syscalls.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>			  <span class="kt">unsigned</span> <span class="n">mask</span><span class="p">,</span> <span class="k">struct</span> <span class="n">statx</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buffer</span><span class="p">);</span>
<span class="n">asmlinkage</span> <span class="kt">long</span> <span class="nf">sys_rseq</span><span class="p">(</span><span class="k">struct</span> <span class="n">rseq</span> <span class="n">__user</span> <span class="o">*</span><span class="n">rseq</span><span class="p">,</span> <span class="kt">uint32_t</span> <span class="n">rseq_len</span><span class="p">,</span>
			 <span class="kt">int</span> <span class="n">flags</span><span class="p">,</span> <span class="kt">uint32_t</span> <span class="n">sig</span><span class="p">);</span>
<span class="cm">/* 909 번째 줄 추가 */</span>
<span class="n">asmlinkage</span> <span class="kt">long</span> <span class="nf">sys_hello</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</code></pre></div></div>

<h1 id="includeuapiasm-genericunistdh">include/uapi/asm-generic/unistd.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define __NR_rseq 293
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_rseq</span><span class="p">,</span> <span class="n">sys_rseq</span><span class="p">)</span>

<span class="cm">/* 740 번째 줄 추가 */</span>
<span class="cp">#define __NR_hello 399
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_hello</span><span class="p">,</span> <span class="n">sys_hello</span><span class="p">)</span>

<span class="cp">#undef __NR_syscalls
#define __NR_syscalls 400
</span></code></pre></div></div>

<h1 id="kernelsysc">kernel/sys.c</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="err">}</span>

<span class="cm">/* 2577 번째 줄 추가 */</span>
<span class="n">SYSCALL_DEFINE0</span><span class="p">(</span><span class="n">hello</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">static</span> <span class="kt">int</span> <span class="n">num_called</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="n">printk</span><span class="p">(</span><span class="s">"Hello, this is syscall by Youngin Sim! (%d)</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">num_called</span><span class="o">++</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="cp">#ifdef CONFIG_COMPAT
</span><span class="k">struct</span> <span class="n">compat_sysinfo</span> <span class="p">{</span>
	<span class="n">s32</span> <span class="n">uptime</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name>Youngin Sim</name></author><category term="OS" /><category term="OS" /><category term="Study" /><summary type="html"><![CDATA[💡 ** OS proj0 시스템 호출 추가하기**]]></summary></entry><entry><title type="html">Proj0</title><link href="http://localhost:4000/proj0/" rel="alternate" type="text/html" title="Proj0" /><published>2022-03-15T00:00:00+09:00</published><updated>2022-03-15T00:00:00+09:00</updated><id>http://localhost:4000/proj0</id><content type="html" xml:base="http://localhost:4000/proj0/"><![CDATA[<p class="notice--success">💡 ** OS proj0 시스템 호출 추가하기**<br /></p>

<h1 id="archarm64includeasmunistdh">arch/arm64/include/asm/unistd.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define __ARM_NR_compat_set_tls		(__ARM_NR_COMPAT_BASE + 5)
#define __ARM_NR_COMPAT_END		(__ARM_NR_COMPAT_BASE + 0x800)
</span>
<span class="cm">/* 47 번째 줄 변경 */</span>
<span class="cp">#define __NR_compat_syscalls		400
#endif
</span>
<span class="cp">#define __ARCH_WANT_SYS_CLONE
</span></code></pre></div></div>

<h1 id="archarm64includeasmunistd32h">arch/arm64/include/asm/unistd32.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_statx</span><span class="p">,</span> <span class="n">sys_statx</span><span class="p">)</span>
<span class="cp">#define __NR_rseq 398
</span><span class="cm">/* 822 번째 줄 추가 */</span>
<span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_rseq</span><span class="p">,</span> <span class="n">sys_rseq</span><span class="p">)</span>
<span class="cp">#define __NR_hello 399
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_hello</span><span class="p">,</span> <span class="n">sys_hello</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="includelinuxsyscallsh">include/linux/syscalls.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>			  <span class="kt">unsigned</span> <span class="n">mask</span><span class="p">,</span> <span class="k">struct</span> <span class="n">statx</span> <span class="n">__user</span> <span class="o">*</span><span class="n">buffer</span><span class="p">);</span>
<span class="n">asmlinkage</span> <span class="kt">long</span> <span class="nf">sys_rseq</span><span class="p">(</span><span class="k">struct</span> <span class="n">rseq</span> <span class="n">__user</span> <span class="o">*</span><span class="n">rseq</span><span class="p">,</span> <span class="kt">uint32_t</span> <span class="n">rseq_len</span><span class="p">,</span>
			 <span class="kt">int</span> <span class="n">flags</span><span class="p">,</span> <span class="kt">uint32_t</span> <span class="n">sig</span><span class="p">);</span>
<span class="cm">/* 909 번째 줄 추가 */</span>
<span class="n">asmlinkage</span> <span class="kt">long</span> <span class="nf">sys_hello</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</code></pre></div></div>

<h1 id="includeuapiasm-genericunistdh">include/uapi/asm-generic/unistd.h</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define __NR_rseq 293
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_rseq</span><span class="p">,</span> <span class="n">sys_rseq</span><span class="p">)</span>

<span class="cm">/* 740 번째 줄 추가 */</span>
<span class="cp">#define __NR_hello 399
</span><span class="n">__SYSCALL</span><span class="p">(</span><span class="n">__NR_hello</span><span class="p">,</span> <span class="n">sys_hello</span><span class="p">)</span>

<span class="cp">#undef __NR_syscalls
#define __NR_syscalls 400
</span></code></pre></div></div>

<h1 id="kernelsysc">kernel/sys.c</h1>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="err">}</span>

<span class="cm">/* 2577 번째 줄 추가 */</span>
<span class="n">SYSCALL_DEFINE0</span><span class="p">(</span><span class="n">hello</span><span class="p">)</span>
<span class="p">{</span>
	<span class="k">static</span> <span class="kt">int</span> <span class="n">num_called</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="n">printk</span><span class="p">(</span><span class="s">"Hello, this is syscall by Youngin Sim! (%d)</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">num_called</span><span class="o">++</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="cp">#ifdef CONFIG_COMPAT
</span><span class="k">struct</span> <span class="n">compat_sysinfo</span> <span class="p">{</span>
	<span class="n">s32</span> <span class="n">uptime</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name>Youngin Sim</name></author><summary type="html"><![CDATA[💡 ** OS proj0 시스템 호출 추가하기**]]></summary></entry><entry><title type="html">Vim 단축키</title><link href="http://localhost:4000/vim/vim_edit/" rel="alternate" type="text/html" title="Vim 단축키" /><published>2022-03-15T00:00:00+09:00</published><updated>2022-03-15T00:00:00+09:00</updated><id>http://localhost:4000/vim/vim_edit</id><content type="html" xml:base="http://localhost:4000/vim/vim_edit/"><![CDATA[<p class="notice--success">💡 ** Vim 단축키 모음 **<br /></p>

<h1 id="이동">이동</h1>

<h2 id="기본-이동">기본 이동</h2>
<ul>
  <li>h, j, k, l: 좌,하,상,우 커서 이동
-: 줄의 처음 위치로 커서 이동</li>
  <li>gg: 맨 위로 커서 이동
[shift + g]: 맨 아래로 커서 이동</li>
</ul>

<h2 id="단어-단위로-이동">단어 단위로 이동</h2>
<ul>
  <li>w: 단어의 시작 위치로 커서 이동 (forward 방향)
    <ul>
      <li>Ex. 3w: 세 단어 앞으로 커서 이동</li>
    </ul>
  </li>
  <li>e: 단어의 마지막 위치로 커서 이동 (forward 방향)</li>
  <li>b: 단어의 시작 위치로 커서 이동 (backward 방향)</li>
  <li>ge: 단어의 마지막 위치로 커서 이동 (backward 방향)</li>
</ul>

<h2 id="한-문장-내에서의-이동">한 문장 내에서의 이동</h2>
<ul>
  <li>0(숫자): 라인 맨 앞으로 커서 이동</li>
  <li>^: 문장 맨 앞으로 커서 이동</li>
  <li>$: 문장 맨 뒤로 커서 이동</li>
</ul>

<h2 id="대략적인-위치로-이동-현재-보이는-페이지-기준">대략적인 위치로 이동 (현재 보이는 페이지 기준)</h2>
<ul>
  <li>[shift + h]: 현재 보이는 페이지를 기준으로 맨 위로 커서 이동</li>
  <li>[shift + m]: 현재 보이는 페이지를 기준으로 중간 라인으로 커서 이동</li>
  <li>[shift + l]: 현재 보이는 페이지를 기준으로 맨 아래로 커서 이동</li>
</ul>

<h2 id="페이지-이동">페이지 이동</h2>
<ul>
  <li>[ctrl+ f]: 다음 페이지의 첫 줄로 커서 이동</li>
  <li>[ctrl+ b]: 다음 페이지의 마지막 줄로 커서 이동</li>
  <li>[ctrl+ d]: 페이지의 절반 크기만큼 아래로 커서 이동</li>
  <li>[ctrl+ u]: 페이지의 절반 크기만큼 위로 커서 이동</li>
</ul>

<h2 id="원하는-줄-번호로-한-번에-이동">원하는 줄 번호로 한 번에 이동</h2>
<ul>
  <li>줄 번호 설정 및 해지
    <ul>
      <li>[: + set number]: 줄 번호 설정</li>
      <li>[: + set nonumber]: 줄 번호 설정</li>
    </ul>
  </li>
  <li>방법1
    <ul>
      <li>[esc] 를 눌러 표준 모드로 진입</li>
      <li>[:] 를 누른 후 원하는 [줄 번호] 입력</li>
    </ul>
  </li>
  <li>방법2
    <ul>
      <li>[esc] 를 눌러 표준 모드로 진입</li>
      <li>원하는 [줄 번호] 입력</li>
      <li>[shift + g] 입력</li>
    </ul>
  </li>
</ul>

<h2 id="컬리-블레이스-curly-brace-을-기준으로-이동">{}(컬리 블레이스, Curly Brace) 을 기준으로 이동</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* ]]: {로 커서 이동 (forward 방향)
	* 없으면 페이지의 맨 아래로 커서 이동
	* {은 가장 상위의 블록을 감싸고 있는 문자만 찾는다.
* [[: {로 커서 이동 (backward 방향)
* ][: }로 커서 이동 (forward 방향)
	* 없으면 페이지의 맨 위로 커서 이동
	* }은 가장 상위의 블록을 감싸고 있는 문자만 찾는다.
* []: }로 커서 이동 (backward 방향)
* %: {}나 ()에서 현재 괄호의 짝으로 커서 이동
</code></pre></div></div>

<h1 id="편집">편집</h1>

<h2 id="삽입-관련-단축키-입력-가능한-상태로-변경">삽입 관련 단축키 (입력 가능한 상태로 변경)</h2>
<ul>
  <li>i: 현재 커서가 위치한 문자의 앞에 Insert 하기</li>
  <li>
    <p>I: 현재 커서가 위치한 줄 맨 앞에 Insert 하기</p>
  </li>
  <li>a: 현재 커서가 위치한 문자의 뒤에 Insert 하기</li>
  <li>
    <p>A: 현재 커서가 위치한 줄 맨 뒤에 Insert 하기</p>
  </li>
  <li>O: 현재 커서가 위치한 줄 바로 윗줄에 Insert 하기</li>
  <li>o: 현재 커서가 위치한 줄 바로 아랫줄에 Insert 하기</li>
</ul>

<h2 id="삭제잘라내기-및-수정-관련-단축키">삭제/잘라내기 및 수정 관련 단축키</h2>
<ul>
  <li>dd: 커서가 위치한 줄 잘라내기</li>
  <li>dw: 커서가 위치한 곳부터 단어의 마지막까지 잘라내기</li>
  <li>Ex. 숫자 + dd: 커서가 위치한 줄부터 숫자에 해당하는 수만큼의 줄 잘라내기</li>
  <li>
    <p>[shift + d]: 현재 커서의 위치부터 줄의 끝까지 잘라내기</p>
  </li>
  <li>x: 커서가 위치한 문자 잘라내기</li>
  <li>
    <p>[shift + x]: 커서가 위치한 문자 바로 앞에 있는 문자 잘라내기</p>
  </li>
  <li>s: 커서가 위치한 문자 잘라내고 Insert 하기</li>
  <li>cc 또는 [shift + s]: 커서가 위치한 줄 전체 잘라내고 Insert 하기</li>
  <li>cw: 커서가 위치한 곳부터 단어의 마지막까지 잘라내고 Insert 하기</li>
  <li>
    <p>[shift + c]: 현재 커서의 위치부터 줄의 끝까지 잘라내고 Insert 하기</p>
  </li>
  <li>[r + 변경할 문자]: 커서가 위치한 문자 하나 수정하기
    <ul>
      <li>Ex. 4rx: 현재 커서 이후 4개의 글자를 “x”로 수정한다.</li>
    </ul>
  </li>
</ul>

<h2 id="복사붙여넣기-관련-단축키">복사/붙여넣기 관련 단축키</h2>
<ul>
  <li>yl: 현재 커서가 위치한 문자 하나만 복사하기</li>
  <li>Ex. 3yl: 현재 커서 이후 3개의 문자를 복사한다.</li>
  <li>yy: 현재 커서가 위치한 줄 복사하기</li>
  <li>yw: 현재 커서의 위치부터 단어가 끝나는 위치까지 복사하기</li>
  <li>y: 블럭 단위로 체크한 내용(비주얼 모드 이용) 복사하기 - 한 문자만 복사 X
    <ul>
      <li>Ex. 숫자 + y: 커서가 위치한 줄부터 숫자에 해당하는 수만큼의 줄 복사하기</li>
      <li>Ex. y$: 커서가 위치한 곳부터 줄의 마지막까지 복사하기</li>
    </ul>
  </li>
  <li>p:
    <ul>
      <li>단어 복사: 현재 커서가 위치한 바로 다음 위치에 붙여넣기</li>
      <li>행 복사: 현재 커서가 위치한 줄 바로 아랫줄에 붙여넣기</li>
    </ul>
  </li>
  <li>[shift + p]:
    <ul>
      <li>단어 복사: 현재 커서가 위치한 바로 앞 위치에 붙여넣기</li>
      <li>행 복사: 현재 커서가 위치한 줄 바로 윗줄에 붙여넣기</li>
    </ul>
  </li>
  <li>숫자 + p: 해당 숫자 만큼 붙여넣기를 반복하기</li>
</ul>

<h1 id="선택">선택</h1>

<h2 id="한-줄-선택">한 줄 선택</h2>
<ul>
  <li>[shift + v]: 라인 단위로 블럭지정이 가능하다.</li>
</ul>

<h2 id="단어-단위로-여러-줄-선택">단어 단위로 여러 줄 선택</h2>
<ul>
  <li>[esc] 를 눌러 표준 모드로 진입</li>
  <li>v 를 눌러 여러 줄을 선택할 수 있는 상태를 만든다.
    <ul>
      <li>v: 단어 단위</li>
      <li>[shift + v]: 라인 단위</li>
    </ul>
  </li>
</ul>

<h2 id="멀티-포커스">멀티 포커스</h2>
<ul>
  <li>[ctrl + v]: 블럭 단위로 여러 줄 선택. 즉, 사각형의 블럭지정이 가능하다.</li>
</ul>

<h1 id="검색">검색</h1>
<ul>
  <li>/ + 찾을 단어 + Enter: 문서에서 단어 찾기
    <ul>
      <li>n 또는 *: 다음 찾기 (forward 방향)</li>
      <li>N 또는 #: 이전 찾기 (backward 방향)</li>
    </ul>
  </li>
</ul>

<h1 id="기타">기타</h1>

<h2 id="다음-줄을-현재-커서가-있는-줄의-끝으로-이어-붙이기">다음 줄을 현재 커서가 있는 줄의 끝으로 이어 붙이기</h2>
<ul>
  <li>[shift + j]: 다음 줄을 현재 커서가 있는 줄의 끝으로 이어 붙인다.</li>
</ul>

<h2 id="취소하기되돌리기-및-들여쓰기내어쓰기">취소하기/되돌리기 및 들여쓰기/내어쓰기</h2>
<ul>
  <li>u: Undo, 이전으로 취소하기</li>
  <li>[ctrl + r]: Redo, 취소한 것을 다시 되돌리기</li>
  <li>&gt; 2번 클릭: 들여쓰기
    <ul>
      <li>&gt;}: 한 문단 전체를 들여쓰기</li>
      <li>Ex. 2»: 2번 들여쓰기</li>
    </ul>
  </li>
  <li>&lt; 2번 클릭: 내어쓰기</li>
  <li>.: - 이전 명령어를 다시 실행</li>
</ul>

<h2 id="대소문자-전환">대소문자 전환</h2>
<ul>
  <li>[shift + ~]: 현재 커서가 위치한 문자의 대소문자를 변경한다.</li>
</ul>

<h2 id="숫자-증감">숫자 증감</h2>
<ul>
  <li>[ctrl + a]: 현재 커서가 위치한 하나의 문자가 숫자라면 해당 명령어로 숫자를 증가시킬 수 있다.</li>
  <li>[ctrl + x]: 현재 커서가 위치한 하나의 문자가 숫자라면 해당 명령어로 숫자를 감소시킬 수 있다.</li>
</ul>

<h2 id="창-열기탭-이동-등">창 열기/탭 이동 등</h2>
<ul>
  <li>[: + vs]: 현재의 창을 세로로 분할된 창으로 하나 더 열기</li>
  <li>[: + new]: 새 창을 현재의 창 아래(세로로)에 분할된 창으로 열기</li>
  <li>[: + tabnew]: 새 창을 현재의 창과 같은 위치에 열기</li>
  <li>
    <p>[ctrl + w] 2번 클릭: 분할 창 간에 이동</p>
  </li>
  <li>[gt]: 오른쪽 탭으로 이동</li>
  <li>[gT]: 왼쪽 탭으로 이동</li>
</ul>

<h2 id="코드-형식-관련">코드 형식 관련</h2>
<ul>
  <li>zc: 코드 접기 (fold)</li>
  <li>
    <p>zM: 코드 모두 접기 (fold)</p>
  </li>
  <li>zo: 접힌 코드 펼치기</li>
  <li>
    <p>zR: 접힌 코드 모두 펼치기</p>
  </li>
  <li>zd: fold 지우기</li>
  <li>zD: 모든 fold 지우기</li>
</ul>

<h1 id="출처">출처</h1>
<ul>
  <li>https://gmlwjd9405.github.io/2019/05/14/vim-shortkey.html</li>
</ul>]]></content><author><name>Youngin Sim</name></author><category term="Vim" /><category term="Vim" /><category term="Tool" /><summary type="html"><![CDATA[💡 ** Vim 단축키 모음 **]]></summary></entry><entry><title type="html">SAP Labs Korea 인턴십 후기 (22.01.04 ~ 22.02.25)</title><link href="http://localhost:4000/learned%20lesson/SAP-Internship/" rel="alternate" type="text/html" title="SAP Labs Korea 인턴십 후기 (22.01.04 ~ 22.02.25)" /><published>2022-03-05T00:00:00+09:00</published><updated>2022-03-05T00:00:00+09:00</updated><id>http://localhost:4000/learned%20lesson/SAP-Internship</id><content type="html" xml:base="http://localhost:4000/learned%20lesson/SAP-Internship/"><![CDATA[<p class="notice--success">💡 <strong>2021년 SAP Labs Korea 인턴십 후기</strong>입니다.<br />
2022년 1월 4일부터 2월 25일까지 이수했으며, 부서마다 다른 점이 많겠지만 궁금하신 분들께 도움이 되고자 적어봅니다. 자세한 인턴 활동 내용은 보안서약상 게시할 수 없어 이 점 양해해주시면 감사하겠습니다. 정보보단 후기처럼 작성하기에 가볍게 읽어주세요.<br /></p>

<h1 id="인턴-시작">인턴 시작</h1>
<p>&lt;다전공생 2021년 겨울 컴퓨터공학부 학점인정인턴프로그램&gt;에 선발되어 SAP 라는 독일 기업에서 인턴쉽 기회를 얻었습니다. 인턴 시작 기간이 다가올수록 기대보다는 걱정이 앞섰습니다. 생애 처음으로 진행하는 기업 인턴십이었기에 밥값못하는 개발자, 짐이 되는 개발자가 되지 않을까 하는 생각을 많이 하였습니다. 두 달 안되는 짧은 기간 동안에 좋은 퍼포먼스를 보여줘야 했기에 마음의 준비를 단단히 하였습니다.<br /></p>

<h1 id="나는-누구-여긴-어디">나는 누구? 여긴 어디?</h1>
<p>SAP Labs Korea는 고속터미널역 근처에 있는 효성빌딩에 위치해있습니다. 지리적 위치가 좋아 출퇴근하기 편했으며 회사가 몰려 있는 곳이기에 직장인? 법조인?이 된 기분이었습니다. 1층에 도착하니 엘레베이터가 8대가 있었고 원하는 층으로 가는 알고리즘을 잘 모르겠어서 사람들 그림자만 따라갔습니다. 안내받은 층에 갔더니 문이 잠겨 있었습니다. 약속된 출근 시간이 지났음에도 저를 인솔해주시는 분을 만나지 못했습니다. 추후 알고보니 잘못된 층을 안내받은 것이었습니다. 팀장님이 제가 있는 곳까지 오셔서 저를 인솔해주셨습니다. 팀장님께서 사주신 맛난 스테이크를 먹고 각종 기기를 받으니 퇴근할 시간이 다가왔습니다. 정신없는 첫 날이었습니다.<br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156866484-4a666560-6857-4ea8-9904-04ae7a515eb2.jpeg" alt="image" width="300" height="400" /> <img src="https://user-images.githubusercontent.com/79507046/156866475-0e7f26d5-b823-471b-9419-66f7751326be.jpeg" alt="image" width="400" height="400" /> <br />(▲ (좌)반포 효성빌딩 (우)서래마을 양파스테이크)</p>

<h1 id="sap가-뭐-하는-곳이야">SAP가 뭐 하는 곳이야?</h1>
<p>저도 SAP에 지원하기 전에는 무슨 회사인줄 몰랐습니다. 알고보니 연간 순이익이 8조가 넘는 회사였습니다… 기업 컨설턴트 회사로 ERP 시스템을 제공하여 기업에 솔루션을 제공하는 일을 하며 최근에는 클라우드 시장에 진입하여 HANA Cloud를 개발 및 판매하고 있습니다. SAP Labs는 SAP에서 연구 및 제품 개발을 담당하고 있으며 SAP Labs Korea는 Labs의 한국지사입니다. 원더풀한 회사에서 저는 어떤 역할을 담당했을까요? 비밀입니다.후훗
<br /></p>

<h1 id="일주일간의-출퇴근">일주일간의 출퇴근</h1>
<p>SAP Labs Korea는 2022년 6월까지는 전면재택, 2022년 12월까지는 일주일에 하루 출근을 선언했습니다. 그럼에도 불구하고 SAP Newcomer의 적응을 위해 사수님들은 김포, 고양에서 일주일동안 출퇴근해주셨습니다. Docker, Kubectl, Cloud, Cluster 등등 처음 접하는 정보들이 머리 속에 들어오자 혼란에 빠졌습니다. 그럴때마다 사수님들은 생각정리 및 솔루션을 제공해주셨고 환경세팅을 무사히 마칠 수 있었습니다. <br /></p>

<h1 id="재택">재택</h1>
<p>일주일간 환경설정을 하고 재택에 돌입하였습니다. 재택을 하니 마음이 여유로워졌습니다. 자유로운 근무시간 덕에 핵심 미팅만 참여하고 나머지는 근무시간을 유연하게 조절하여 업무를 진행하였습니다. <br /></p>

<h1 id="마무리">마무리</h1>
<p>두 달동안 나름 작성한 code와 wiki를 contribution하였고, 마지막날 발표를 통해 제가 했던 Task들을 팀원 분들에게 공유드렸습니다. 팀원분들은 Farewell Party를 열어주셨고 Rolling paper 작성 등등 저와의 이별을 아쉬워해주셨습니다. 짧지만 SAP가 지원해준 많은 것들이 저에게 큰 도움이 되었기에 이별이 많이 아쉬웠습니다.<br /></p>

<h1 id="learned-lesson">Learned Lesson</h1>
<p>가장 크게 느낀 부분은 English였습니다. Daily Sync 미팅에서 매일 영어로 회의를 하다보니 제가 하고 싶은 말을 표현할 수 없어 아쉬운 마음이 컸습니다. 좋은 정보를 제공해주고 싶어도 전달할 수 없었고 유익한 정보를 습득하는 데에도 어려움이 있었습니다. 영어로 나의 생각을 표현하는 것이 얼마나 필요하고 중요한지 느낄 수 있었습니다. 여러분 영어로 저에게 말걸어주세요 ㅎㅎ. <br />
또한 양방향 소통의 중요성을 깨달았습니다. 홀로 Task를 수행했다면 두 달안에 이런 퍼포먼스를 보여줄 수 없었을 것입니다. 훌륭한 팀원들과 서로의 지식을 공유하는 과정에서 문제 해결의 실마리를 찾을 수 있었습니다. 모르는 점을 질문하는 것을 부끄러워하지 않으며 반대로 쉬운 질문을 받더라도 자세히 알려주는 사람이 되어야겠습니다.(사수님처럼😏) 
마지막으로 SAP Labs Korea는 정말 좋은 회사입니다. 강추드립니다. <br /></p>

<p>도와주신 모든 분 감사드립니다. Good Bye SAP! <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156866489-88a5eca7-5800-4930-a96a-7fed986b35cb.jpeg" alt="image" width="600" height="800" /><br />(▲ SAP에서 본 고터)</p>]]></content><author><name>Youngin Sim</name></author><category term="Learned Lesson" /><category term="SAP Labs Korea" /><category term="Learned Lesson" /><category term="Internship" /><summary type="html"><![CDATA[💡 2021년 SAP Labs Korea 인턴십 후기입니다. 2022년 1월 4일부터 2월 25일까지 이수했으며, 부서마다 다른 점이 많겠지만 궁금하신 분들께 도움이 되고자 적어봅니다. 자세한 인턴 활동 내용은 보안서약상 게시할 수 없어 이 점 양해해주시면 감사하겠습니다. 정보보단 후기처럼 작성하기에 가볍게 읽어주세요.]]></summary></entry><entry><title type="html">J일지도 모르는 P의 여행(시흥, 오이도편)</title><link href="http://localhost:4000/travel/PtoJ-siheung/" rel="alternate" type="text/html" title="J일지도 모르는 P의 여행(시흥, 오이도편)" /><published>2022-03-04T00:00:00+09:00</published><updated>2022-03-04T00:00:00+09:00</updated><id>http://localhost:4000/travel/PtoJ-siheung</id><content type="html" xml:base="http://localhost:4000/travel/PtoJ-siheung/"><![CDATA[<p class="notice--success">💡 ** 2022년 2월 28일부터 3월 1일까지 ** 여행기록입니다.<br /></p>

<h1 id="여행을-떠나며">여행을 떠나며</h1>
<p>방학동안 진행했던 기업인턴이 끝나니 어느새 방학이 끝나가고 있었습니다. 개강 전 마지막으로 허용된 자유를 만끽하기 위해 여행을 결심하였습니다. MBTI P형인 저는 J라고 주장하는 절친 SHB에게 여행을 계획하게 되었습니다. 카톡에서 보다시피 철저한 계획을 세우고 모든 변수에 대비하였습니다.<br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156760038-0f402fb8-3249-4010-bf89-5879d733e0be.png" alt="image" width="300" height="400" /><br />(▲ SHB와의 카톡)</p>

<p>여행 목적지는 시흥으로 결정하였습니다. 결정에는 3가지 이유가 크게 작용했습니다. 1. 서울대학교 시흥캠퍼스 말로만 들어보았지 실체가 궁금하다. 2. 셔틀버스를 이용하여 교통비를 절감할 수 있기에 더 맛있는 것을 많이 먹을 수 있다. 3. SHB는 대학원 연구실 퇴근 후 합류해야 했기에 학교에서 출발하는 것이 피로가 적을 것이다. <br /></p>

<p>2월의 마지막날 저희는 계획대로(정확한 시간계획이 없었기에 헐레벌떡 뛰어) 6시 25분 셔틀을 탔습니다. 셔틀 버스에서 쫑알 쫑알 대화를 나누며 이동하였습니다.(대학원생은 피곤해보였습니다😢😢)</p>

<h1 id="나-꽤나-힙할지도">나 꽤나 힙할지도😎</h1>
<p>셔틀에 내렸을 때 저희가 본 시흥의 첫 인상은 ‘신도시’였습니다. 보행자를 위한 도로가 넓지만 인구밀도는 적으며 ‘임대인 구합니다’라는 전단지가 붙여 있는 곳이었습니다. 구석구석 돌아다녀보니 관광객에게 제공하는 다양한 볼거리들을 체험할 수 있었습니다. 시계탑이 눈에 들어왔고 전광판에 비친 저희들의 모습을 찍었더니 꽤나 힙해보였습니다. 우리 사실 인싸일지도… <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156762920-25258f67-c643-4628-a45a-c09c84131f4d.jpeg" alt="image" width="300" height="400" /> <img src="https://user-images.githubusercontent.com/79507046/156762830-0846270c-cc3d-4d33-aad3-e5f908fa8936.jpeg" alt="image" width="300" height="400" /><br />(▲ 시흥 배곧마을 전경)</p>

<h1 id="여행은-식도락-여행이지">여행은 식도락 여행이지!</h1>
<p>완벽하게 계획적인 여행이었지만 아쉽게도 식당을 정하지 않았었네요😢😢. 30분정도 걷다가 “고기올린 밥”이라는 식당이 눈에 띄어 들어가게 되었습니다. 고기올린밥이라니 정말 직관적인 이름이죠? 그래서 들어갔습니다. SHB 친구는 직화불고기덮밥(?)을, 저는 스테이크 덮밥을 먹었습니다. 비쥬얼은 좋았으나 저의 입에는 조금 싱거웠습니다. <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156763813-de722e4e-05ad-4ca9-b7fc-c7dac6d7719b.jpeg" alt="image" width="400" height="300" /><br />(▲ 고기올린밥 스테이크 덮밥)</p>

<p>이후 후식으로 명량 핫도그를 먹고 싸이버거를 먹으러 맘스터치에 갔습니다. 저는 싸이플렉스 버거 SHB는 싸이버거를 먹었습니다. 그리고 후식으로 공차도 먹었습니다.</p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156764865-e28c15c9-ee7e-447d-9a2a-0c9c42aa621d.jpeg" alt="image" width="400" height="300" /> <img src="https://user-images.githubusercontent.com/79507046/156764838-95478132-b4b0-4d6a-b6ba-5eba3d486921.jpeg" alt="image" width="230" height="330" /><br />(▲ 싸이버거 + 공차)</p>

<h1 id="뭐하고-놀지">뭐하고 놀지?</h1>
<p>공차를 홀짝이며 산책을 하던도중 거대한 놀이터를 발견할 수 있었습니다. SHB는 어린아이처럼 꼭대기에 올라가 어린아이들이 있는 와중에도 부끄러운 기색없이 놀이터를 차지하였습니다. 다음은 증거 사진입니다. <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156764863-f69af1bb-15da-4ebb-9f49-2b20a3f73c30.jpeg" alt="image" width="400" height="600" /><br />(▲ 부끄러움을 모르는 SHB)</p>

<p>덩치 큰 모자른 대학생들이 놀이터에서 놀고 있으니 기존에 점령하고 있던 초등학생들은 저희에게 관심을 보였습니다. 8살 친구 3명과 6살 친구 1명과 다양한 이야기를 나눌 수 있었습니다. 어린 친구들은 ‘나 태권도 유단자임’, ‘나 유연함’, ‘보드 잘탐’, ‘춤 잘춤’ 등등 다양한 자랑을 하였습니다. 실제로 진짜로 보드도 잘탔고 유연했으며 헤이마마 춤추는 친구를 봤을 때 감탄을 금치 못했습니다. 유튜브 링크로 가서 보시면 제가 봤던 춤들 볼 수 있습니다 허허.(https://youtube.com/shorts/Mp980TL_JdA?feature=share) 제가 어렸을 때는 과장해서 자랑받고 인정받으려고 애썼는데 요즘 친구들은 실력으로 증명하는 것을 보고 깜짝 놀랐습니다. 어린 친구들은 늦은 시간동안 집에 가지 않더라구요. 알고보니 시흥에서 요식업을 하는 자녀들이었습니다. 10시에 마감될 때까지 놀이터에서 놀고 부모님과 같이 집에 돌아가는 일상을 반복하고 있는 것 같았습니다. 가정을 지키기 위해 노력하는 부모의 모습이 존경스러운 마음과 동시에 이런 환경에 처한 아이들을 위한 시스템이 갖추어졌으면 하는 생각이 동시에 들었습니다. 놀이터 덕분에 귀여운 아이들과 좋은 시간을 보낼 수 있었습니다.<br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156764858-f2e3b87d-972c-465b-8abf-d3ae1b13c833.jpeg" alt="image" width="400" height="600" /><br />(▲ 나 유연해요!)</p>
<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156764847-3ca8c7db-7bed-4935-b3d5-fa167d5e539c.jpeg" alt="image" width="400" height="600" /><br />(▲ 유연해져라!)</p>
<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156764860-75684cff-9b10-4f3a-b568-70a3409ed663.jpeg" alt="image" width="400" height="600" /><br />(▲ 행복하렴 멋쟁이 친구들아!)</p>

<h1 id="잠은-우리-어디서-자">잠은 우리 어디서 자?</h1>
<p>길가다 호텔이라는 희미하지만 큰 표지판을 보았습니다. 예약을 하지 않은 저희는 보이던 호텔로 가서 바로 잤습니다. <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156768752-9a39bdb3-50cb-4c21-9af0-c000759d693d.jpeg" alt="image" width="300" height="400" /><br />(▲ 희미한 호텔간판)</p>

<h1 id="결과보다-과정이-중요하다">결과보다 과정이 중요하다</h1>
<p>2일차 여행의 아침이 밝았습니다. 진짜 많이 먹어서 칼국수도 먹고 버거킹도 점심으로 같이 먹었습니다. 너무 많이 먹어서 그냥 생략하도록 하겠습니다. 아마 아이스크림도 먹었던 것 같습니다. <br />
2일차는 오이도에 가서 바다의 향을 느껴보는 것이었습니다. 사실 버스타고 가면되는데 아무 생각없이 무작정 걷기 시작했습니다. 첫 번째로 인상 깊었던 것은 서울대 시흥캠퍼스 기숙사였습니다. 오피스텔처럼 보이는 시설은 서울대학교 시흥캠퍼스 기숙사입니다. 저라면 이런 퀄리티에 1인실이며 월 10만원이라니 대학원생이었으면 바로 입주했을 거에요. <br /></p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156770923-eede12af-ab1e-4c0e-af3e-9db39e5f50c8.jpeg" alt="image" width="300" height="400" /><br />(▲ 시흥캠퍼스 기숙사)</p>

<p>길을 걷다가 국궁장이라는 장소에 들렸습니다. 계획은 아니었습니다. 길가다가 보여서 얼쩡거리니 40대 후반되어보이시는 분이 저희에게 국궁이란 무엇인가 소개해주셨습니다. 실제로 국궁을 쏘시는 모습도 볼 수 있었습니다. 양궁과 같은 점수 시스템이 아니라 과녁을 맞추는지를 중요하게 본다고 합니다. 과녁에 적중시 LED 불빛이 점등되어 ON-HIT 여부를 파악한다고 합니다. 양궁만 알고 있던 저는 신기방기한 경험이었습니다.</p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156770947-27a0bb6b-ac20-42cf-82ee-e2c08badc8f6.jpeg" alt="image" width="300" height="400" /> <img src="https://user-images.githubusercontent.com/79507046/156770944-4a402792-b7e5-45de-99e2-53c640aae76b.jpeg" alt="image" width="300" height="400" /><br />(▲ 국궁장)</p>

<p>오이도에 도착했습니다. 술찐빵, 만두를 먹다가 갈매기에게 사냥당할 뻔했습니다. 오이도에 도착한 후 바로 버스타고 집에 갔습니다. 오이도를 향해 3시간 정도 걸은 후 10분간 오이도에 있다가 집에 왔습니다.</p>

<p class="text-center"><img src="https://user-images.githubusercontent.com/79507046/156770940-46c22f19-ff8c-4de1-98f5-e1dd490e0dea.jpeg" alt="image" width="300" height="400" /> <img src="https://user-images.githubusercontent.com/79507046/156770950-4857f151-70f0-41c8-829f-1b23a3f473ed.jpeg" alt="image" width="300" height="400" /><br />(▲ 오이도)</p>

<h1 id="여행을-마치며">여행을 마치며</h1>
<p>이 여행에서 주목할 점은 2월 28일 오후 6시 30분부터 익일 3월 1일 오후 3시 30분까지의 21시간동안의 여행기록이라는 점입니다. SHB와 함께 있으면 어린시절로 돌아간 느낌입니다. 다음에도 SHB 혹은 다른 친구들과 함께하는 여행 기대해주세요!</p>]]></content><author><name>Youngin Sim</name></author><category term="travel" /><category term="travel" /><summary type="html"><![CDATA[💡 ** 2022년 2월 28일부터 3월 1일까지 ** 여행기록입니다.]]></summary></entry></feed>